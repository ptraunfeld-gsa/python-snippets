# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

################################################################################################################################################
# Fortify Application Security provides your team with solutions to empower DevSecOps practices, enable cloud transformation, and secure your  #
# software supply chain. To learn more about Fortify, start a free trial or contact our sales team, visit fortify.com.                         #
#                                                                                                                                              #
# Use this starter workflow as a basis for integrating Fortify Application Security Testing into your GitHub workflows. This template          #
# demonstrates the steps to package the code+dependencies, initiate a scan, and optionally import SAST vulnerabilities into GitHub Security    #
# Code Scanning Alerts. Additional information is available in the workflow comments and the Fortify AST Action / fcli / Fortify product       #
# documentation. If you need additional assistance, please contact Fortify support.                                                            #
################################################################################################################################################

name: FOD RUN SAST


on:
  push:
    branches: [ "fod-scan" ]
 # pull_request:
    # The branches below must be a subset of the branches above
 #   branches: [ "main" ]
 # schedule:
 #   - cron: '28 23 * * 6'
  workflow_dispatch:

jobs:
  Fortify-AST-Scan:
    permissions:
      actions: read
      contents: read
      security-events: write
    uses: GSA/ise-appsec/.github/workflows/github-fortify-src.yml@gh_fod_demo
    with:
      FOD_APP_NAME: 'GSA/ise-appsec'
      FOD_RELEASE_NAME: 'from-python-snippets'
      PACKAGE_EXTRA_OPTS: '--exclude "venv/,.mypy_cache,__pycache__/"'
      # 
      # To copy existing release attributes, scan settings, and issue details when creating a new release, uncomment the COPY_FROM_RELEASE input.
      # If the name of your base release is not in the form <org>/<repo>:<default_branch> (e.g. GSA/ise-appsec:main), 
      # set COPY_FROM_RELEASE to an existing FOD release (either a numeric ID, or AppName:ReleaseName)
      # 
      # COPY_FROM_RELEASE: "${{ github.repository }}:${{ github.event.repository.default_branch }}" 
    secrets:
      FOD_CLIENT_ID: ${{ secrets.FOD_CLIENT_ID }}
      FOD_CLIENT_SECRET: ${{ secrets.FOD_CLIENT_SECRET }}
      http_proxy: ${{ secrets.HTTP_PROXY }}
      https_proxy: ${{ secrets.HTTPS_PROXY }}
